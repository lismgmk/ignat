{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior-plus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","avatarImg","circle","text","textName","name","textContent","textTime","time","messageData","HW1","Affair","marginLeft","marginTop","Button","variant","size","color","onClick","deleteAffairCallback","affair","_id","Affairs","mappedAffairs","data","map","a","margin","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","i","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onBlur","onChange","disabled","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","console","log","alert","HW3","setUsers","newUser","v1","userCopy","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","testSpanError","blue","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","mainContainer","container","linkStyle","activeClassName","activeLink","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.27110a90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeLink\":\"Header_activeLink__1KP4s\",\"mainContainer\":\"Header_mainContainer__3kPzc\",\"container\":\"Header_container__2KJec\",\"move\":\"Header_move__1R5Vi\",\"linkStyle\":\"Header_linkStyle__3DL9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"margin\":\"Affairs_margin__mh2-C\",\"marginLeft\":\"Affairs_marginLeft__3W50H\",\"marginTop\":\"Affairs_marginTop__264OP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1OjkQ\",\"avatarImg\":\"Message_avatarImg__1GwEa\",\"text\":\"Message_text__3NSpL\",\"textContent\":\"Message_textContent__u0x07\",\"circle\":\"Message_circle__1Y5NE\",\"textName\":\"Message_textName__2LeRl\",\"textTime\":\"Message_textTime__33V7p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3wVdS\",\"errorInput\":\"SuperInputText_errorInput__3tUQD\",\"error\":\"SuperInputText_error__32out\",\"input\":\"SuperInputText_input__KGq8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2AQyl\",\"column\":\"HW4_column__2Rp3V\",\"testSpanError\":\"HW4_testSpanError__vO3Sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__6e18Q\",\"red\":\"SuperButton_red__3gD8r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1EtXI\",\"spanClassName\":\"SuperCheckbox_spanClassName__2TAIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__TP73z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__2F36o\"};","import React from 'react';\r\nimport {MessageDataType} from \"./HW1\";\r\nimport s from \"./Message.module.css\"\r\n\r\n\r\nfunction Message(props: MessageDataType) {\r\n    return (\r\n        <div className={s.message}>\r\n\r\n                <img src = {props.avatar} alt={'avatar'} className={s.avatarImg}/>\r\n\r\n            <div className={s.circle}></div>\r\n            <div className={s.text}>\r\n                    <div className={s.textName}>{props.name}</div>\r\n                    <div className={s.textContent}>{props.message}</div>\r\n                <div className={s.textTime}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00'\r\n};\r\n\r\nexport type MessageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            {/*homeworks 1*/}\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}/\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import Button from '@material-ui/core/Button';\r\nimport React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from \"./Affairs.module.css\";\r\nimport {Box, Container} from \"@material-ui/core\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: ( _id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\r\n    const deleteCallback = () => {\r\n        debugger\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div className={s.marginLeft}>\r\n            <div>\r\n                // show some text\r\n            </div>\r\n\r\n            <span className={s.marginTop}>\r\n                <Button variant='contained' size=\"small\" color=\"secondary\" onClick={deleteCallback}>X</Button>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport s from './Affairs.module.css'\r\nimport {Container} from \"@material-ui/core\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (val: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n            <span className={s.margin}>\r\n     <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={setAll}>All</Button>\r\n            </span>\r\n            <span className={s.margin}>\r\n     <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={setHigh}>High</Button>\r\n            </span>\r\n            <span className={s.margin}>\r\n     <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={setMiddle}>Middle</Button>\r\n            </span>\r\n            <span className={s.margin}>\r\n     <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={setLow}>Low</Button>\r\n            </span>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: FilterType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType>  => { // need to fix any\r\n    if (filter === 'all') return [...affairs]\r\n    else if (filter === 'high') return affairs.filter(i=> i.priority === filter)\r\n    else if (filter === 'low') return affairs.filter(i=> i.priority === filter)\r\n    else if (filter === 'middle') return affairs.filter(i=> i.priority === filter)\r\n    else return affairs\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(i => i._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Input} from \"@material-ui/core\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>)=> void // need to fix any\r\n    addUser: (e: any) => void  // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error\r\n\r\n    return (\r\n        <div>\r\n            <input value={name}\r\n                   onBlur={setNameCallback}\r\n                   onChange={setNameCallback}\r\n                   className={error ? inputClass : ''}/>\r\n            <span>{error}</span>\r\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={addUser} disabled={!name}>add</Button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string)=>void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n       if(e.currentTarget.value.trim()){\r\n           setName(e.currentTarget.value)\r\n          error && setError('')\r\n       }\r\n       else {\r\n           name && setName('')\r\n           setError('incorrect value')}\r\n         // need to fix\r\n        console.log(name)\r\n    }\r\n\r\n    const addUser = () => {\r\n        addUserCallback(name);\r\n        alert(`Hello ${name}!!!`);\r\n        setName('');\r\n    }\r\n    const totalUsers = users.length\r\n    // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n       const newId = v1()\r\n        let newUser = {\r\n            _id: newId,\r\n            name: name\r\n        }\r\n\r\n       const userCopy= [...users, newUser]\r\n        setUsers(userCopy) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n            {console.log(users)}\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${!error ? s.superInput : s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked &&  onChangeChecked(e.currentTarget.checked)\r\n        onChange &&  onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {'этот текст попадёт в children'}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            HW5\r\n            {/*<HW5/>*/}\r\n            {/*<HW6/>*/}\r\n            {/*<HW7/>*/}\r\n            {/*<HW8/>*/}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            {/*<HW9/>*/}\r\n            {/*<HW10/>*/}\r\n            {/*<HW11/>*/}\r\n            {/*<HW12/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {Switch, Route, Redirect} from \"react-router-dom\"\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/Junior-plus\";\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from './Routes'\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.container}>\r\n                <NavLink to={PATH.PRE_JUNIOR} className={s.linkStyle} activeClassName={s.activeLink}>Pre Junior</NavLink>\r\n                <NavLink to={PATH.JUNIOR} className={s.linkStyle} activeClassName={s.activeLink}>Junior</NavLink>\r\n                <NavLink to={PATH.JUNIOR_PLUS} className={s.linkStyle} activeClassName={s.activeLink}>Junior++</NavLink>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}